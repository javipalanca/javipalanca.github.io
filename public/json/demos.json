{
  "demos": [
    {
      "id": "simple",
      "name": "Basic Communication",
      "description": "A simple demonstration of two agents exchanging messages.",
      "agentTypes": [
        "sender",
        "receiver"
      ],
      "features": [
        "message-passing",
        "xmpp"
      ],
      "nodes": [
        {
          "id": "agent1",
          "type": "sender",
          "position": {
            "x": 100,
            "y": 200
          },
          "behaviors": [
            {
              "type": "cyclic",
              "name": "SendMessage"
            }
          ]
        },
        {
          "id": "agent2",
          "type": "receiver",
          "position": {
            "x": 400,
            "y": 200
          },
          "behaviors": [
            {
              "type": "cyclic",
              "name": "ReceiveMessage"
            }
          ]
        }
      ],
      "edges": [
        {
          "from": "agent1",
          "to": "agent2",
          "type": "message"
        }
      ],
      "pythonFile": "simple.py"
    },
    {
      "id": "behaviors",
      "name": "Agent Behaviors",
      "description": "Demonstration of different behavior types in SPADE agents.",
      "agentTypes": [
        "coordinator",
        "worker"
      ],
      "features": [
        "behaviors",
        "cyclic",
        "one-shot"
      ],
      "nodes": [
        {
          "id": "coordinator",
          "type": "coordinator",
          "position": {
            "x": 250,
            "y": 100
          },
          "behaviors": [
            {
              "type": "one-shot",
              "name": "Coordinate"
            }
          ]
        },
        {
          "id": "worker1",
          "type": "worker",
          "position": {
            "x": 150,
            "y": 300
          },
          "behaviors": [
            {
              "type": "cyclic",
              "name": "ProcessTask"
            }
          ]
        },
        {
          "id": "worker2",
          "type": "worker",
          "position": {
            "x": 350,
            "y": 300
          },
          "behaviors": [
            {
              "type": "cyclic",
              "name": "ProcessTask"
            }
          ]
        }
      ],
      "edges": [
        {
          "from": "coordinator",
          "to": "worker1",
          "type": "task"
        },
        {
          "from": "coordinator",
          "to": "worker2",
          "type": "task"
        }
      ],
      "pythonFile": "behaviors.py"
    },
    {
      "id": "network",
      "name": "Agent Network",
      "description": "A network of multiple interconnected agents demonstrating complex interactions.",
      "agentTypes": [
        "coordinator",
        "sender",
        "receiver",
        "worker"
      ],
      "features": [
        "network",
        "multi-agent",
        "complexity"
      ],
      "nodes": [
        {
          "id": "coordinator",
          "type": "coordinator",
          "position": {
            "x": 300,
            "y": 100
          },
          "behaviors": [
            {
              "type": "one-shot",
              "name": "InitializeNetwork"
            }
          ]
        },
        {
          "id": "sender",
          "type": "sender",
          "position": {
            "x": 150,
            "y": 250
          },
          "behaviors": [
            {
              "type": "cyclic",
              "name": "BroadcastMessages"
            }
          ]
        },
        {
          "id": "receiver1",
          "type": "receiver",
          "position": {
            "x": 450,
            "y": 200
          },
          "behaviors": [
            {
              "type": "cyclic",
              "name": "ProcessMessages"
            }
          ]
        },
        {
          "id": "receiver2",
          "type": "receiver",
          "position": {
            "x": 450,
            "y": 300
          },
          "behaviors": [
            {
              "type": "cyclic",
              "name": "ProcessMessages"
            }
          ]
        },
        {
          "id": "worker1",
          "type": "worker",
          "position": {
            "x": 600,
            "y": 200
          },
          "behaviors": [
            {
              "type": "cyclic",
              "name": "DoWork"
            }
          ]
        },
        {
          "id": "worker2",
          "type": "worker",
          "position": {
            "x": 600,
            "y": 300
          },
          "behaviors": [
            {
              "type": "cyclic",
              "name": "DoWork"
            }
          ]
        }
      ],
      "edges": [
        {
          "from": "coordinator",
          "to": "sender",
          "type": "command"
        },
        {
          "from": "sender",
          "to": "receiver1",
          "type": "message"
        },
        {
          "from": "sender",
          "to": "receiver2",
          "type": "message"
        },
        {
          "from": "receiver1",
          "to": "worker1",
          "type": "task"
        },
        {
          "from": "receiver2",
          "to": "worker2",
          "type": "task"
        }
      ],
      "pythonFile": "network.py"
    },
    {
      "id": "presence",
      "name": "Presence Notification",
      "description": "Agents that monitor and react to presence changes in the network.",
      "agentTypes": [
        "buddy",
        "server"
      ],
      "features": [
        "presence",
        "notification",
        "monitoring"
      ],
      "nodes": [
        {
          "id": "server",
          "type": "server",
          "position": {
            "x": 300,
            "y": 150
          },
          "behaviors": [
            {
              "type": "presenceNotification",
              "name": "MonitorPresence"
            }
          ]
        },
        {
          "id": "buddy1",
          "type": "buddy",
          "position": {
            "x": 150,
            "y": 300
          },
          "behaviors": [
            {
              "type": "cyclic",
              "name": "HandlePresence"
            }
          ]
        },
        {
          "id": "buddy2",
          "type": "buddy",
          "position": {
            "x": 450,
            "y": 300
          },
          "behaviors": [
            {
              "type": "cyclic",
              "name": "HandlePresence"
            }
          ]
        }
      ],
      "edges": [
        {
          "from": "server",
          "to": "buddy1",
          "type": "presence"
        },
        {
          "from": "server",
          "to": "buddy2",
          "type": "presence"
        },
        {
          "from": "buddy1",
          "to": "server",
          "type": "status"
        },
        {
          "from": "buddy2",
          "to": "server",
          "type": "status"
        }
      ],
      "pythonFile": "presence.py"
    },
    {
      "id": "pubsub",
      "name": "Publish-Subscribe",
      "description": "Publisher-subscriber pattern with message brokers and topic-based routing.",
      "agentTypes": [
        "publisher",
        "subscriber",
        "broker"
      ],
      "features": [
        "pubsub",
        "topics",
        "routing"
      ],
      "nodes": [
        {
          "id": "broker",
          "type": "broker",
          "position": {
            "x": 300,
            "y": 150
          },
          "behaviors": [
            {
              "type": "cyclic",
              "name": "RouteMessages"
            }
          ]
        },
        {
          "id": "publisher1",
          "type": "publisher",
          "position": {
            "x": 100,
            "y": 250
          },
          "behaviors": [
            {
              "type": "publication",
              "name": "PublishNews"
            }
          ]
        },
        {
          "id": "publisher2",
          "type": "publisher",
          "position": {
            "x": 100,
            "y": 350
          },
          "behaviors": [
            {
              "type": "publication",
              "name": "PublishWeather"
            }
          ]
        },
        {
          "id": "subscriber1",
          "type": "subscriber",
          "position": {
            "x": 500,
            "y": 200
          },
          "behaviors": [
            {
              "type": "subscription",
              "name": "ReceiveNews"
            }
          ]
        },
        {
          "id": "subscriber2",
          "type": "subscriber",
          "position": {
            "x": 500,
            "y": 300
          },
          "behaviors": [
            {
              "type": "subscription",
              "name": "ReceiveWeather"
            }
          ]
        }
      ],
      "edges": [
        {
          "from": "publisher1",
          "to": "broker",
          "type": "publish"
        },
        {
          "from": "publisher2",
          "to": "broker",
          "type": "publish"
        },
        {
          "from": "broker",
          "to": "subscriber1",
          "type": "deliver"
        },
        {
          "from": "broker",
          "to": "subscriber2",
          "type": "deliver"
        }
      ],
      "pythonFile": "pubsub.py"
    },
    {
      "id": "event-driven",
      "name": "Event-Driven Behaviors",
      "description": "Complex event-driven interactions with forwarders, responders, and aggregators.",
      "agentTypes": [
        "forwarder",
        "responder",
        "aggregator"
      ],
      "features": [
        "events",
        "aggregation",
        "load-balancing"
      ],
      "nodes": [
        {
          "id": "forwarder",
          "type": "forwarder",
          "position": {
            "x": 200,
            "y": 150
          },
          "behaviors": [
            {
              "type": "messageForwarding",
              "name": "ForwardRequests"
            }
          ]
        },
        {
          "id": "responder1",
          "type": "responder",
          "position": {
            "x": 400,
            "y": 100
          },
          "behaviors": [
            {
              "type": "autoResponse",
              "name": "ProcessAndRespond"
            }
          ]
        },
        {
          "id": "responder2",
          "type": "responder",
          "position": {
            "x": 400,
            "y": 200
          },
          "behaviors": [
            {
              "type": "autoResponse",
              "name": "ProcessAndRespond"
            }
          ]
        },
        {
          "id": "aggregator",
          "type": "aggregator",
          "position": {
            "x": 600,
            "y": 150
          },
          "behaviors": [
            {
              "type": "messageAggregation",
              "name": "CollectResponses"
            }
          ]
        }
      ],
      "edges": [
        {
          "from": "forwarder",
          "to": "responder1",
          "type": "request"
        },
        {
          "from": "forwarder",
          "to": "responder2",
          "type": "request"
        },
        {
          "from": "responder1",
          "to": "aggregator",
          "type": "response"
        },
        {
          "from": "responder2",
          "to": "aggregator",
          "type": "response"
        }
      ],
      "pythonFile": "event-driven.py"
    }
  ],
  "agentTypes": {
    "sender": {
      "color": "#4CAF50",
      "icon": "send",
      "label": "Sender Agent",
      "size": 25
    },
    "receiver": {
      "color": "#2196F3",
      "icon": "inbox",
      "label": "Receiver Agent",
      "size": 25
    },
    "coordinator": {
      "color": "#FF9800",
      "icon": "hub",
      "label": "Coordinator",
      "size": 30
    },
    "worker": {
      "color": "#9C27B0",
      "icon": "work",
      "label": "Worker Agent",
      "size": 20
    },
    "buddy": {
      "color": "#00BCD4",
      "icon": "person",
      "label": "Buddy Agent",
      "size": 25
    },
    "server": {
      "color": "#F44336",
      "icon": "server",
      "label": "Server",
      "size": 35
    },
    "publisher": {
      "color": "#8BC34A",
      "icon": "publish",
      "label": "Publisher",
      "size": 25
    },
    "subscriber": {
      "color": "#3F51B5",
      "icon": "subscribe",
      "label": "Subscriber",
      "size": 25
    },
    "broker": {
      "color": "#FF5722",
      "icon": "router",
      "label": "Message Broker",
      "size": 35
    },
    "forwarder": {
      "color": "#607D8B",
      "icon": "forward",
      "label": "Forwarder",
      "size": 25
    },
    "responder": {
      "color": "#795548",
      "icon": "reply",
      "label": "Responder",
      "size": 25
    },
    "aggregator": {
      "color": "#E91E63",
      "icon": "merge",
      "label": "Aggregator",
      "size": 25
    }
  }
}