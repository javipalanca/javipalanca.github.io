---
// Breadcrumb Navigation Component for SEO
// Generates breadcrumbs based on current URL path

export interface Props {
    currentPageTitle?: string;
}

const { currentPageTitle } = Astro.props;
const currentPath = Astro.url.pathname;

// Generate breadcrumb items based on URL structure
function generateBreadcrumbs(path: string, pageTitle?: string) {
    const segments = path.split('/').filter(segment => segment !== '');
    const breadcrumbs = [
        { 
            name: 'Home', 
            url: '/', 
            isActive: false 
        }
    ];

    let currentUrl = '';
    
    segments.forEach((segment, index) => {
        currentUrl += `/${segment}`;
        const isLast = index === segments.length - 1;
        
        // Map URL segments to readable names
        let name = segment;
        switch (segment) {
            case 'spade':
                name = 'SPADE Framework';
                break;
            case 'plugins':
                name = 'Plugins';
                break;
            case 'spade-llm':
                name = 'SpadeLLM';
                break;
            case 'spade-bdi':
                name = 'SPADE BDI';
                break;
            case 'spade-pubsub':
                name = 'SPADE PubSub';
                break;
            case 'spade-artifact':
                name = 'SPADE Artifact';
                break;
            case 'spade-norms':
                name = 'SPADE Norms';
                break;
            case 'spade-bokeh':
                name = 'SPADE Bokeh';
                break;
            default:
                // Capitalize first letter and replace hyphens with spaces
                name = segment.charAt(0).toUpperCase() + segment.slice(1).replace(/-/g, ' ');
        }
        
        // Use custom page title for the last breadcrumb if provided
        if (isLast && pageTitle) {
            name = pageTitle;
        }
        
        breadcrumbs.push({
            name,
            url: currentUrl,
            isActive: isLast
        });
    });

    return breadcrumbs;
}

const breadcrumbs = generateBreadcrumbs(currentPath, currentPageTitle);
---

<nav class="breadcrumb-nav" aria-label="Breadcrumb navigation">
    <div class="container">
        <ol class="breadcrumb" itemscope itemtype="https://schema.org/BreadcrumbList">
            {breadcrumbs.map((item, index) => (
                <li 
                    class={`breadcrumb-item ${item.isActive ? 'active' : ''}`}
                    itemprop="itemListElement" 
                    itemscope 
                    itemtype="https://schema.org/ListItem"
                >
                    {item.isActive ? (
                        <span itemprop="name" aria-current="page">{item.name}</span>
                    ) : (
                        <a href={item.url} itemprop="item">
                            <span itemprop="name">{item.name}</span>
                        </a>
                    )}
                    <meta itemprop="position" content={(index + 1).toString()} />
                </li>
            ))}
        </ol>
    </div>
</nav>

<style>
    .breadcrumb-nav {
        background: rgba(248, 249, 250, 0.8);
        padding: 0.75rem 0;
        border-bottom: 1px solid #e9ecef;
        backdrop-filter: blur(10px);
    }

    .breadcrumb {
        margin: 0;
        padding: 0;
        background: transparent;
        font-size: 0.9rem;
    }

    .breadcrumb-item + .breadcrumb-item::before {
        content: '>';
        color: #6c757d;
        padding: 0 0.5rem;
    }

    .breadcrumb-item a {
        color: var(--primary-color, #007bff);
        text-decoration: none;
        transition: color 0.2s ease;
    }

    .breadcrumb-item a:hover {
        color: var(--secondary-color, #0056b3);
        text-decoration: underline;
    }

    .breadcrumb-item.active span {
        color: #6c757d;
        font-weight: 500;
    }

    /* Dark mode support */
    :global(body.dark-mode) .breadcrumb-nav {
        background: rgba(33, 37, 41, 0.9);
        border-bottom-color: var(--dark-border, #495057);
    }

    :global(body.dark-mode) .breadcrumb-item a {
        color: #9b59b6;
    }

    :global(body.dark-mode) .breadcrumb-item a:hover {
        color: #bb8fce;
    }

    :global(body.dark-mode) .breadcrumb-item.active span {
        color: var(--dark-text-muted, #adb5bd);
    }

    :global(body.dark-mode) .breadcrumb-item + .breadcrumb-item::before {
        color: var(--dark-text-muted, #6c757d);
    }

    /* Responsive design */
    @media (max-width: 768px) {
        .breadcrumb-nav {
            padding: 0.5rem 0;
        }
        
        .breadcrumb {
            font-size: 0.8rem;
        }
        
        .breadcrumb-item + .breadcrumb-item::before {
            padding: 0 0.25rem;
        }
    }
</style>